
source = "../examples/gut.htm";
//source = "http://www.gutenberg.org/files/31704/31704-h/31704-h.htm";
//source = "http://leyokki.org";

var result = '';
var nodeValues = [];

function loadDiv(source)
{
	// example = Load webpage through php
	//$('.page').load('php/grabber.php?url='+source);

	// loading webpage from source URL
	$.get('php/grabber.php?url='+source,function(data){
		$('page').html(data);
		console.log($.parseHTML(data));
		result = data;
		// Question : pourquoi result devient inaccessible quand
		// on sort de la fonction?
	delHeaders(result);
	});
}

function delHeaders(data){
	var $page = $("#page"),
	isHead = false,
	html = $.parseHTML(data),
	nodeNames = [],
	scrolling = "",
			// compteur pour le nombre de paragraphes
			// idée: si nb_p est un nombre premier, ajoute une classe
	nb_p = 0;

	$.each(html,function(i,el){
<<<<<<< HEAD
		scrolling += el.nodeName+"\n";
=======
		//scrolling pour jeter un oeil aux balises
		scrolling += el.nodeName+"\n";	
>>>>>>> 97b9f04c26e9780ec230e050aad34fe7cd52e72b
		if (isHead == true) {
			// do not select if node is text
			if (el.nodeName != "#text" && el.nodeName != "PRE"){
				// to add a class to p if it is a prime number
				classe_p = "";
				if (el.nodeName == "P") {
					nb_p++;
					if (isPrime3(nb_p)) {
						classe_p = " class='prime'";
					}
				}
				// create tag_in and tag_out for style
				tag_in = "<"+el.nodeName+classe_p+">",
				tag_out = "<"+el.nodeName+"/>",
				// print innerHTML with tags
				nodeNames[i] = tag_in+el.innerHTML+tag_out;
			}
		}
		if (el.nodeName == "PRE") {
			// delete what is before and after the PRE tag
			isHead = !isHead;
		}
	});
	// print the results
	$page.append("<h3> Nodes </h3>");
	// conserver les <ol> pour garder les styles
	$("<ol></ol>")
		.append(nodeNames.join(""))
<<<<<<< HEAD
		.appendTo($log);
	$log.append(scrolling);
}
=======
		.appendTo($page);
	$("#log").append(scrolling);
}

// function to test if n is a prime number
// cf. http://www.javascripter.net/faq/numberisprime.htm
function isPrime3(n) {
	 if (isNaN(n) || !isFinite(n) || n%1 || n<2) return false; 
	  if (n%2==0) return (n==2);
	   if (n%3==0) return (n==3);
	    var m=Math.sqrt(n);
	     for (var i=5;i<=m;i+=6) {
		       if (n%i==0)     return false;
		         if (n%(i+2)==0) return false;
			  }
	      return true;
}

loadDiv(source);



// todo: add style
// proposition: deux colonnes
// en fonction du style
>>>>>>> 97b9f04c26e9780ec230e050aad34fe7cd52e72b
